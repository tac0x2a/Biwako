version: "3"
services:
  rabbitmq:
    image: rabbitmq-nayco
    build:
      context: rabbitmq
    hostname: rabbitmq
    restart: always
    ports:
      - 15672:15672 # Web management console. Default account guest:guest
      - 1883:1883 # MQTT Port

  # RabbitMQ to ClickHouse
  grebe:
    image: tac0x2a/grebe:v1.0.3
    hostname: grebe
    restart: always
    environment:
      - MQ_QNAME=nayco # Queue name to subscribe on RabbitMQ
      - MQ_HOST=rabbitmq # RabbitMQ host
      - DB_HOST=clickhouse # Clickhouse host
    volumes:
      - ./volume/grebe/logs:/logs
      - ./volume/grebe/schemas:/schemas

  # Column-oriented DWH. db=default, user=default, pass=default
  clickhouse:
    image: yandex/clickhouse-server:20.5.2.7
    hostname: clickhouse
    restart: always
    ports:
      - 8123:8123 # HTTP client port
    volumes:
      - ./volume/clickhouse:/var/lib/clickhouse

  # Portainer - Monitoring containers
  portainer: # admin - tryportainer
    image: portainer/portainer:1.24.0
    hostname: portainer
    restart: always
    ports:
      - 19000:9000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./volume/portainer/data:/data

  # Metabase visualize data on ClickHouse.
  metabase:
    image: metabase-nayco
    build:
      context: metabase
    hostname: metabase
    restart: always
    ports:
      - 3000:3000
    volumes:
      - ./volume/metabase:/metabase-data
    environment:
      - MB_DB_FILE=/metabase-data/metabase.db

  # Tabix - Clickhouse web based client
  tabix:
    image: spoonest/clickhouse-tabix-web-client:stable
    hostname: tabix
    restart: always
    ports:
      - 8080:80
    environment:
      CH_HOST: clickhouse:8123

  # Node-RED
  node-red:
    image: nodered/node-red-docker:v10
    hostname: nodered
    restart: always
    ports:
      - 1880:1880
    volumes:
      - ./volume/nodered/data:/data
    user: root:root
