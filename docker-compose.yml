version: "3"
services:
  rabbitmq:
    image: rabbitmq-nayco
    build:
      context: rabbitmq
    hostname: rabbitmq
    restart: always
    ports:
      - 15672:15672 # Web management console. Default account guest:guest
      - 1883:1883 # MQTT Port
      - 5672:5672 # RabbitMQ Port for debugging
    environment:
      - TZ

  # RabbitMQ to ClickHouse
  grebe:
    image: tac0x2a/grebe:v1.3.1
    hostname: grebe
    restart: always
    ports:
      - 8888:8888 # Web API
    environment:
      - MQ_QNAME=nayco # Queue name to subscribe on RabbitMQ
      - MQ_HOST=rabbitmq # RabbitMQ host
      - DB_HOST=clickhouse # Clickhouse host
      - SCHEMA_STORE=rdb # Schema on Clickhouse
      - TZ
      - TZ_STR=${TZ}
      - API_PORT=8888
    volumes:
      - ./volume/grebe/logs:/logs
      - ./volume/grebe/schemas:/schemas

  # File storage to RabbitMQ
  onamazu:
    image: tac0x2a/o-namazu:v0.3.1
    hostname: onamazu
    restart: always
    environment:
      - TZ
    volumes:
      - ./volume/onamazu/logs:/logs
      - ./volume/storage_volume:/data:z

  # Column-oriented DWH. db=default, user=default, pass=default
  clickhouse:
    image: yandex/clickhouse-server:20.9.2.20
    hostname: clickhouse
    restart: always
    ports:
      - 8123:8123 # HTTP client port
      - 9004:9004 # MySQL Interface(wire protocol) port
      - 9000:9000 # Native port
    environment:
      - TZ:UTC
    volumes:
      - ./volume/clickhouse:/var/lib/clickhouse

  # Portainer - Monitoring containers
  portainer: # admin - tryportainer
    image: portainer/portainer:1.24.1-alpine
    hostname: portainer
    restart: always
    ports:
      - 19000:9000
    environment:
      - TZ
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./volume/portainer/data:/data

  scope: # host:4040
    image: weaveworks/scope:1.13.1
    hostname: scope
    restart: always
    network_mode: host
    pid: host
    privileged: true
    labels:
      - "works.weave.role=system"
    environment:
      - TZ
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:rw"
    command:
      - "--probe.docker=true"

  # Metabase visualize data on ClickHouse.
  metabase:
    image: metabase-nayco
    build:
      context: metabase
    hostname: metabase
    restart: always
    ports:
      - 3000:3000
    environment:
      - MB_DB_FILE=/metabase-data/metabase.db
      - JAVA_TIMEZONE=Asia/Tokyo
      - TZ
    volumes:
      - ./volume/metabase:/metabase-data

  # Tabix - Clickhouse web based client
  tabix:
    image: spoonest/clickhouse-tabix-web-client:stable
    hostname: tabix
    restart: always
    ports:
      - 8080:80
    environment:
      - CH_HOST=clickhouse:8123
      - TZ

  # Node-RED
  node-red:
    image: nodered/node-red:1.1.3-minimal
    hostname: nodered
    restart: always
    ports:
      - 1880:1880
    environment:
      - TZ
    volumes:
      - ./volume/nodered/data:/data
      - ./volume/storage_volume:/storage:z
    user: root:root

  # File Storage ----------------------------------------------------------------------------------

  # Filebrowser
  # admin:admin
  filebrowser:
    image: filebrowser/filebrowser:v2
    hostname: filebrowser
    restart: always
    ports:
      - "8082:80"
    environment:
      - TZ
    volumes:
      - ./volume/storage_volume:/srv:z

  samba: # nayco:nayco
    image: dperson/samba:amd64
    restart: always
    hostname: samba
    ports:
      - "137:137/udp"
      - "138:138/udp"
      - "139:139/tcp"
      - "445:445/tcp"
    tmpfs:
      - /tmp
    read_only: false
    stdin_open: true
    tty: true
    environment:
      - TZ
    volumes:
      - ./volume/storage_volume:/mnt/storage:z
    command: '-s "nayco;/mnt/storage;yes;no;no;nayco" -u "nayco;nayco" -p -g "hide dot files = no"'
    # -s "<name;/path>[;browse;readonly;guest;users;admins;writelist;comment]"
    # -p Set ownership and permissions on the shares
    # -u "<username;password>[;ID;group;GID]"

  # Uminoco ----------------------------------------------------------------------------------
  uminoco:
    image: uminoco
    restart: always
    hostname: uminoco
    build:
      context: uminoco
      args:
        project_directory: "/projects/"
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=productiont
      - DB_HOST=clickhouse
      - DB_PORT=9000
      - GREBE_HOST=grebe
      - GREBE_PORT=8888
      - TZ
